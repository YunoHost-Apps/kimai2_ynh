#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source ynh_composer__3
source /usr/share/yunohost/helpers

#=================================================
# MANAGE SCRIPT FAILURE
#=================================================

ynh_clean_setup () {
	true
}
# Exit if an error occurs during the execution of the script
ynh_abort_if_errors

#=================================================
# RETRIEVE ARGUMENTS FROM THE MANIFEST
#=================================================

domain=$YNH_APP_ARG_DOMAIN
path_url="/"
admin=$YNH_APP_ARG_ADMIN
is_public=$YNH_APP_ARG_IS_PUBLIC
registration=$YNH_APP_ARG_REGISTRATION
random_key=$(ynh_string_random 32)
app=$YNH_APP_INSTANCE_NAME
update=0

#=================================================
# CHECK IF THE APP CAN BE INSTALLED WITH THESE ARGS
#=================================================
ynh_script_progression --message="Validating installation parameters..."

final_path=/var/www/$app
test ! -e "$final_path" || ynh_die --message="This path already contains a folder"

# Register (book) web path
ynh_webpath_register --app=$app --domain=$domain --path_url=$path_url

#=================================================
# STORE SETTINGS FROM MANIFEST
#=================================================
ynh_script_progression --message="Storing installation settings..."

ynh_app_setting_set --app=$app --key=domain       --value=$domain
ynh_app_setting_set --app=$app --key=path         --value=$path_url
ynh_app_setting_set --app=$app --key=admin        --value=$admin
ynh_app_setting_set --app=$app --key=is_public    --value=$is_public
ynh_app_setting_set --app=$app --key=registration --value=$registration
ynh_app_setting_set --app=$app --key=random_key   --value=$random_key
ynh_app_setting_set --app=$app --key=update       --value=$update

#=================================================
# STANDARD MODIFICATIONS
#=================================================
# INSTALL DEPENDENCIES
#=================================================
ynh_script_progression --message="Installing dependencies..."

ynh_install_app_dependencies $pkg_dependencies

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_script_progression --message="Setting up source files..."

ynh_app_setting_set --app=$app --key=final_path --value=$final_path

# Clone the latest version

git clone -b $tag --depth 1 https://github.com/kevinpapst/kimai2.git $final_path

#=================================================
# NGINX CONFIGURATION
#=================================================
ynh_script_progression --message="Configuring nginx web server..."

# Create a dedicated nginx config
ynh_add_nginx_config

#=================================================
# CREATE DEDICATED USER
#=================================================
ynh_script_progression --message="Configuring system user..."

# Create a system user
ynh_system_user_create --username=$app

#=================================================
# PHP-FPM CONFIGURATION
#=================================================
ynh_script_progression --message="Configuring php-fpm..."

# Create a dedicated php-fpm config
ynh_add_fpm_config --usage=low --footprint=low --package="$extra_php_dependencies"

#=================================================
# SPECIFIC SETUP
#=================================================
# CONFIGURE KIMAI2
#=================================================
ynh_script_progression --message="Configuring Kimai2..."

local_conf="$final_path/config/packages/local.yaml"
# Configure registration
cp ../conf/local.yaml $local_conf
ynh_replace_string      --match_string="__APP__"          --replace_string="$app"  --target_file="$local_conf"

# Registration should be allowed or not 
if [ $registration -eq 1  ]
then
	ynh_replace_string  --match_string="__REGISTRATION__" --replace_string="true"  --target_file="$local_conf"
else
	ynh_replace_string  --match_string="__REGISTRATION__" --replace_string="false" --target_file="$local_conf"
fi

env_conf="$final_path/.env"
# setup application config
cp ../conf/.env.mysql $env_conf
db_name=$(ynh_sanitize_dbid --db_name=$app)
db_user=$db_name
ynh_app_setting_set --app=$app                       --key=db_name --value=$db_name
ynh_mysql_setup_db  --db_user=$db_user               --db_name=$db_name	
ynh_replace_string  --match_string="__RANDOM_KEY__"  --replace_string="$random_key" --target_file="$env_conf"
ynh_replace_string  --match_string="__DOMAIN__"      --replace_string="$domain"     --target_file="$env_conf"
ynh_replace_string  --match_string="__DB_PASSWORD__" --replace_string="$db_pwd"     --target_file="$env_conf"
ynh_replace_string  --match_string="__DB_USER__"     --replace_string="$db_name"    --target_file="$env_conf"
ynh_replace_string  --match_string="__DB_NAME__"     --replace_string="$db_name"    --target_file="$env_conf"

#=================================================
# BUILD KIMAI2
#=================================================
ynh_script_progression --message="Building Kimai2..."

ynh_install_composer --phpversion="${YNH_PHP_VERSION}" --workdir="$final_path" --install_args="--optimize-autoloader"
ynh_composer_exec --phpversion="${YNH_PHP_VERSION}" --workdir="$final_path" --commands="require laminas/laminas-ldap"

pushd "$final_path"
	php${YNH_PHP_VERSION} bin/console kimai:install -n
popd

#=================================================
# STORE THE CONFIG FILE CHECKSUM
#=================================================
ynh_script_progression --message="Storing the config file checksum..."

# Calculate and store the config file checksum into the app settings
ynh_store_file_checksum --file="$local_conf"
ynh_store_file_checksum --file="$env_conf"

#=================================================
# GENERIC FINALIZATION
#=================================================
# SECURE FILES AND DIRECTORIES
#=================================================
ynh_script_progression --message="Securing files and directories..."

# Set permissions to app files
chown -R $app: $final_path

#=================================================
# SETUP SSOWAT
#=================================================
ynh_script_progression --message="Configuring SSOwat..."

ynh_permission_create --permission="teamlead"
ynh_permission_create --permission="admin"
ynh_permission_create --permission="super_admin" --allowed "$admin"

# Make app public if necessary
if [ $is_public -eq 1 ]
then
	# unprotected_uris allows SSO credentials to be passed anyway.
	ynh_permission_update --permission "main" --add "visitors"
fi

#=================================================
# RELOAD NGINX
#=================================================
ynh_script_progression --message="Reloading nginx web server..."

ynh_systemd_action --service_name=nginx --action=reload

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Installation of $app completed"
