#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# STANDARD UPGRADE STEPS
#=================================================
# ENSURE DOWNWARD COMPATIBILITY
#=================================================
ynh_script_progression --message="Ensuring downward compatibility..." --weight=1

if [ -z "$registration" ]; then
	registration_enabled="false"
	ynh_app_setting_set --app=$app --key=registration --value=$registration
fi

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================

if [ "$upgrade_type" == "UPGRADE_APP" ]
then
	ynh_script_progression --message="Upgrading source files..." --weight=1

	# Download, check integrity, uncompress and patch the source from app.src
	ynh_setup_source --dest_dir="$install_dir" --keep="var/invoices/ var/data/"
fi

chmod -R o-rwx "$install_dir"
chown -R $app:www-data "$install_dir"
setfacl -dR -m g:"www-data":rwX -m u:$app:rwX "$install_dir/var/"
setfacl -R -m g:"www-data":rwX -m u:$app:rwX "$install_dir/var/"

#=================================================
# PHP-FPM CONFIGURATION
#=================================================
ynh_script_progression --message="Upgrading PHP-FPM configuration..." --weight=1

# Create a dedicated PHP-FPM config
ynh_add_fpm_config --usage=low --footprint=low

# Create a dedicated NGINX config
ynh_add_nginx_config

#=================================================
# SPECIFIC UPGRADE
#=================================================
# BUILD KIMAI2
#=================================================
ynh_script_progression --message="Building $app..." --weight=1

ynh_secure_remove --file="$final_path/var/cache/prod/*"
ynh_install_composer --install_args="--optimize-autoloader --no-scripts"
ynh_composer_exec --commands="require laminas/laminas-ldap"

chmod 750 "$install_dir"
chmod -R o-rwx "$install_dir"
chown -R $app:www-data "$install_dir"
setfacl -dR -m g:"www-data":rwX -m u:$app:rwX "$install_dir/var/"
setfacl -R -m g:"www-data":rwX -m u:$app:rwX "$install_dir/var/"

#=================================================
# UPDATE A CONFIG FILE
#=================================================
ynh_script_progression --message="Updating a configuration file..." --weight=1

if [ $registration -eq 1  ]
then
	registration="true"
else
	registration="false"
fi

ynh_add_config --template="../conf/local.yaml" --destination="$install_dir/config/packages/local.yaml"

chmod 400 "$install_dir/config/packages/local.yaml"
chown $app:$app "$install_dir/config/packages/local.yaml"

# Configure environement
ynh_add_config --template="../conf/.env" --destination="$install_dir/.env"

chmod 400 "$install_dir/.env"
chown $app:$app "$install_dir/.env"

#=================================================
# INSTALL KIMAI2
#=================================================
ynh_script_progression --message="Installing $app..." --weight=1

pushd "$install_dir"
	ynh_exec_as $app php$phpversion bin/console kimai:update -n
popd

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Upgrade of $app completed" --last
