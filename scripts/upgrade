#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# ENSURE DOWNWARD COMPATIBILITY
#=================================================
ynh_script_progression --message="Ensuring downward compatibility..." --weight=1

if [ "$database" == "sqlite" ]; then
    ynh_script_progression --message="Sqlite is not supported by Kimai2 anymore..."
    ynh_script_progression --message="Kimai2 will be upgraded to last available version : 1.13"
    if ynh_compare_current_package_version --comparison ge --version 1.17.1~ynh1; then
        ynh_script_progression --message="Kimai2 sqlite version is already to the last available version, no upgrade will be made"
        ynh_die  --message="" 0
    fi
fi

if [ -z "${registration:-}" ]; then
    registration=0
    ynh_app_setting_set --app="$app" --key=registration --value="$registration"
fi

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_script_progression --message="Upgrading source files..." --weight=1

if ynh_compare_current_package_version --comparison le --version 1.30.0~ynh1; then
    ynh_script_progression --message="Doing a hard cache flush for major Kimai 2 update from version 1.x to 2.x"

    # Download, check integrity, uncompress and patch the source from app.src
    # Remove local.yaml as recommended for major version upgrade https://github.com/kimai/kimai/blob/main/UPGRADING.md
    # As a full_replace (see https://www.kimai.org/documentation/updates.html) is performed keep .env file
    ynh_setup_source --dest_dir="$install_dir" --keep=".env var/invoices/ var/data/" --full_replace=1
else
    # Download, check integrity, uncompress and patch the source from app.src
    ynh_setup_source --dest_dir="$install_dir" --full_replace=1 --keep="config/packages/local.yaml var/invoices/ var/data/"
fi

chmod 750 "$install_dir"
chmod -R o-rwx "$install_dir"
chown -R "$app:www-data" "$install_dir"
setfacl -dR -m g:"www-data":rwX -m u:"$app":rwX "$install_dir/var/"
setfacl -R -m g:"www-data":rwX -m u:"$app":rwX "$install_dir/var/"

#=================================================
# UPDATE A CONFIG FILE
#=================================================
ynh_script_progression --message="Updating a configuration file..." --weight=1

registration=$(boolstr "$registration")

ynh_add_config --template="local.yaml" --destination="$install_dir/config/packages/local.yaml"

chmod 400 "$install_dir/config/packages/local.yaml"
chown "$app:$app" "$install_dir/config/packages/local.yaml"

# Configure environement
ynh_add_config --template="dot_env" --destination="$install_dir/.env"

chmod 400 "$install_dir/.env"
chown "$app:$app" "$install_dir/.env"

#=================================================
# BUILD KIMAI2
#=================================================
ynh_script_progression --message="Building $app..." --weight=1

ynh_install_composer --phpversion="$phpversion" --workdir="$install_dir" --install_args="--optimize-autoloader --no-interaction"
ynh_composer_exec --phpversion="$phpversion" --workdir="$install_dir" --commands="require laminas/laminas-ldap --optimize-autoloader"

chmod 750 "$install_dir"
chmod -R o-rwx "$install_dir"
chown -R "$app:www-data" "$install_dir"
setfacl -dR -m g:"www-data":rwX -m u:"$app":rwX "$install_dir/var/"
setfacl -R -m g:"www-data":rwX -m u:"$app":rwX "$install_dir/var/"

#=================================================
# INSTALL KIMAI2
#=================================================
ynh_script_progression --message="Installing $app..." --weight=1

pushd "$install_dir"
    ynh_exec_as "$app" "php$phpversion" bin/console kimai:update -n
popd

#=================================================
# REAPPLY SYSTEM CONFIGURATIONS
#=================================================
ynh_script_progression --message="Upgrading system configurations related to $app..." --weight=1

# Create a dedicated PHP-FPM config
ynh_add_fpm_config

# Create a dedicated NGINX config
ynh_add_nginx_config

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Upgrade of $app completed" --last
