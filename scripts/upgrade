#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# LOAD SETTINGS
#=================================================

app=$YNH_APP_INSTANCE_NAME

domain=$(ynh_app_setting_get $app domain)
path_url=$(ynh_app_setting_get $app path)
admin=$(ynh_app_setting_get $app admin)
is_public=$(ynh_app_setting_get $app is_public)
final_path=$(ynh_app_setting_get $app final_path)
random_key=$(ynh_app_setting_get $app random_key)

#=================================================
# ENSURE DOWNWARD COMPATIBILITY
#=================================================

# Fix is_public as a boolean value
if [ "$is_public" = "Yes" ]; then
	ynh_app_setting_set $app is_public 1
	is_public=1
elif [ "$is_public" = "No" ]; then
	ynh_app_setting_set $app is_public 0
	is_public=0
fi


# If final_path doesn't exist, create it
if [ -z $final_path ]; then
	final_path=/var/www/$app
	ynh_app_setting_set $app final_path $final_path
fi

#=================================================
# BACKUP BEFORE UPGRADE THEN ACTIVE TRAP
#=================================================

# Backup the current version of the app
ynh_backup_before_upgrade
ynh_clean_setup () {
	# restore it if the upgrade fails
	ynh_restore_upgradebackup
}
# Exit if an error occurs during the execution of the script
ynh_abort_if_errors

#=================================================
# CHECK THE PATH
#=================================================

# Normalize the URL path syntax
path_url=$(ynh_normalize_url_path $path_url)

#=================================================
# INSTALL DEPENDENCIES
#=================================================

ynh_install_php7

#=================================================
# STANDARD UPGRADE STEPS
#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================

# Download, check integrity, uncompress and patch the source from app.src and do required installation for update

#version check for 0.3
version=`sed -n 's/^future-release=//p' /var/www/kimai2/.github_changelog_generator`

# Uncompress latest sources
ynh_setup_source "$final_path"

# If the version is 0.3, symfony update is required
if [ "$version" = "0.3" ]
then
	init_symfony_update $final_path
fi

init_composer $final_path
(
cd $final_path && sudo /usr/bin/php7.2  bin/console cache:clear --env=prod
cd $final_path && sudo /usr/bin/php7.2  bin/console cache:warmup --env=prod
cd $final_path && sudo /usr/bin/php7.2  bin/console doctrine:migrations:migrate -n
)
#=================================================
# NGINX CONFIGURATION
#=================================================

# Create a dedicated nginx config
ynh_add_nginx_config
if [ "$path_url" != "/" ]
then
	ynh_replace_string "^#sub_path_only" "" "/etc/nginx/conf.d/$domain.d/$app.conf"
fi
ynh_store_file_checksum "/etc/nginx/conf.d/$domain.d/$app.conf"

#=================================================
# CREATE DEDICATED USER
#=================================================

# Create a system user
ynh_system_user_create $app

#=================================================
# PHP-FPM 7.2 CONFIGURATION
#=================================================

# Create a dedicated php-fpm7.1 config
ynh_add_fpm7.2_config


#=================================================
# SPECIFIC UPGRADE
#=================================================
# ...
#=================================================

# Verify the checksum and backup the file if it's different
ynh_backup_if_checksum_is_different "$final_path/.env"
# Recalculate and store the config file checksum into the app settings
ynh_store_file_checksum "$final_path/.env"

#=================================================
# GENERIC FINALIZATION
#=================================================
# SECURE FILES AND DIRECTORIES
#=================================================

# Set right permissions 
chown -R $app: $final_path

#=================================================
# SETUP SSOWAT
#=================================================

if [ $is_public -eq 0 ]
then	# Remove the public access
	ynh_app_setting_delete $app skipped_uris
fi
# Make app public if necessary
if [ $is_public -eq 1 ]
then
	# unprotected_uris allows SSO credentials to be passed anyway
	ynh_app_setting_set $app unprotected_uris "/"
fi

#=================================================
# RELOAD NGINX
#=================================================
systemctl reload php7.2-fpm
systemctl reload nginx
# Set default php to php5 or php7.0
if [ "$(lsb_release --codename --short)" == "jessie" ]; then
	update-alternatives --set php /usr/bin/php5
else
    update-alternatives --set php /usr/bin/php7.0
fi
